The ``matrix_divided`` module
=============================

Using ``matrix_divided``
------------------------

First import ``matrix_divided`` from the ``2-matrix_divided`` file:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Tests:

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix = [
    ...     [3.2, 3, 78],
    ...     [9.3, 0.67, 5]
    ... ]
    >>> matrix_divided(matrix, 0.7)
    [[4.57, 4.29, 111.43], [13.29, 0.96, 7.14]]

Test - matrix is not a list of integers or floats

    >>> matrix = [
    ...     ["hello", 3, 78],
    ...     [9.3, "a", True]
    ... ]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test - each row of the matrix must be of the same size

    >>> matrix = [
    ...     [1, 2, 3, 4],
    ...     [5, 6, 7]
    ... ]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

Test - div must be a number (integer or float)

    >>> matrix = [
    ...     [3, 78, 23],
    ...     [9.3, 1, 0]
    ... ]
    >>> matrix_divided(matrix, "hello")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Test - div canâ€™t be equal to 0

    >>> matrix = [
    ...     [3, 78, 23],
    ...     [9.3, 1, 0]
    ... ]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero
