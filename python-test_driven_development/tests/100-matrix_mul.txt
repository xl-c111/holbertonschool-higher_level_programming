The ``matrix_mul`` module
======================

Using ``matrix_mul``
-------------------

First import ``matrix_mul`` from the ``100-matrix_mul`` file:

    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Tests:

    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]

    Test - m_a is not a list
    >>> matrix_mul("hello world", [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list

    Test - m_b is not a list
    >>> matrix_mul([[1, 2], [3, 4]], True)
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list

    Test - m_a is not a list of lists
    >>> matrix_mul([1, 2, 3], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list of lists

    Test - m_b is not a list of lists
    >>> matrix_mul([[1, 2], [3, 4]], [1, 2, 3])
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list of lists

    Test - m_a is empty
    >>> matrix_mul([], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty

    Test - m_b is empty
    >>> matrix_mul([[1, 2], [3, 4]], [])
    Traceback (most recent call last):
    ...
    ValueError: m_b can't be empty

    Test - m_a should only contain integers or floats
    >>> matrix_mul([[1, 'x'], [3, 4]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_a should contain only integers or floats

    Test - m_b should only contain integers or floats
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], ['a', 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_b should contain only integers or floats

    Test - rows of m_a are not of the same size
    >>> matrix_mul([[1, 2, 3], [4, 5]], [[1, 2], [3, 4], [5, 6]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_a must be of the same size

    Test - rows of m_b are not of the same size
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4, 5]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_b must be of the same size

    Test - m_a and m_b cannot be multiplied
    >>> matrix_mul([[1, 2]], [[1, 2], [3, 4], [5, 6]])
    Traceback (most recent call last):
    ...
    ValueError: m_a and m_b can't be multiplied

    Test - multiplying 1x1 matrices
    >>> matrix_mul([[5]], [[3]])
    [[15]]

    Test - matrices with float elements
    >>> matrix_mul([[1.0, 2.0], [3.0, 4.0]], [[1, 2], [3, 4]])
    [[7.0, 10.0], [15.0, 22.0]]

    Test - m_a is [[]] (empty row)
    >>> matrix_mul([[]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty

    Test - m_b is [[]]
    >>> matrix_mul([[1, 2], [3, 4]], [[]])
    Traceback (most recent call last):
    ...
    ValueError: m_b can't be empty
