The ``print_square`` module
===========================

Using ``print_square``
-----------------------

First import ``print_square`` from the ``4-print_square`` file:

    >>> print_square = __import__('4-print_square').print_square

Test - size is a valid positive integer:

    >>> print_square(4)
    ####
    ####
    ####
    ####

Test - size is 1 (single #):

    >>> print_square(1)
    #

Test - size is 0 (should print nothing):

    >>> print_square(0)

Test - size must be an integer:

    >>> print_square("hello")
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test - size is a negative integer:

    >>> print_square(-1)
    Traceback (most recent call last):
    ...
    ValueError: size must be >= 0

Test - size is a float (non-integer):

    >>> print_square(0.3)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test - size is a float but an integer value:

    >>> print_square(3.0)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test - size is a negative float:

    >>> print_square(-0.3)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Test - missing one argument:

    >>> print_square()
    Traceback (most recent call last):
    ...
    TypeError: print_square() missing 1 required positional argument: 'size'